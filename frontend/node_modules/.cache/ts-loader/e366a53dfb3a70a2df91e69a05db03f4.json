{"remainingRequest":"/Users/orangewater/test_work/frontend/node_modules/babel-loader/lib/index.js!/Users/orangewater/test_work/frontend/node_modules/ts-loader/index.js??ref--13-2!/Users/orangewater/test_work/frontend/src/store/questionModules/index.ts","dependencies":[{"path":"/Users/orangewater/test_work/frontend/src/store/questionModules/index.ts","mtime":1609272329674},{"path":"/Users/orangewater/test_work/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orangewater/test_work/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orangewater/test_work/frontend/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL29yYW5nZXdhdGVyL3Rlc3Rfd29yay9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CnZhciBzdGF0ZSA9IHsKICBxdWVzdGlvbjogW10sCiAgZGF0YTogewogICAgaWQ6IDAsCiAgICBxdWVzdDogJycsCiAgICBjcmVhdGVfYXQ6ICcnLAogICAgYW5zd2VyOiBbXSwKICAgIGFuc3dlcl90ZXh0OiBbXQogIH0sCiAgcG9pbnQ6IHsKICAgIHBvaW50OiAwCiAgfQp9Owp2YXIgYWN0aW9ucyA9IHsKICBmZXRjaFF1ZXN0aW9uOiBmdW5jdGlvbiBmZXRjaFF1ZXN0aW9uKF9yZWYpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBjb21taXQsIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCgnaHR0cDovL2xvY2FsaG9zdDo4MDAwL2FwaS92MS9xdWVzdGlvbi8nKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICAgIGNvbW1pdCgnRkVUQ0hfUScsIHJlcy5kYXRhKTsKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UpOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgZGV0YWlsUXVlc3Rpb246IGZ1bmN0aW9uIGRldGFpbFF1ZXN0aW9uKF9yZWYyLCBuZXdWYWx1ZSkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHZhciBjb21taXQsIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCgiaHR0cDovL2xvY2FsaG9zdDo4MDAwL2FwaS92MS9xdWVzdGlvbi8iLmNvbmNhdChuZXdWYWx1ZSwgIi8iKSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UpOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTIpOwogICAgfSkpKCk7CiAgfSwKICBhbnN3ZXJzUXVlc3Rpb246IGZ1bmN0aW9uIGFuc3dlcnNRdWVzdGlvbihfcmVmMywgbmV3VmFsdWUpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICB2YXIgY29tbWl0LCByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5wdXQoImh0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9hcGkvdjEvcXVlc3Rpb24vcXVlc3Rpb24vYW5zd2VyLyIuY29uY2F0KG5ld1ZhbHVlLnBrLCAiLyIpLCB7CiAgICAgICAgICAgICAgICAnYW5zd2Vycyc6IG5ld1ZhbHVlLmFuc3dlcgogICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiAiQmVhcmVyICIuY29uY2F0KGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUzKTsKICAgIH0pKSgpOwogIH0sCiAgcmVnaXN0ZXI6IGZ1bmN0aW9uIHJlZ2lzdGVyKF9yZWY0LCBuZXdWYWx1ZSkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoKSB7CiAgICAgIHZhciBjb21taXQsIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY0LmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QoImh0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9hcGkvdjEvdXNlci8iLCBuZXdWYWx1ZSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDQuc2VudDsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UpOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTQpOwogICAgfSkpKCk7CiAgfQp9Owp2YXIgbXV0YXRpb25zID0gewogIEZFVENIX1E6IGZ1bmN0aW9uIEZFVENIX1EoZmV0Y2gsIGRhdGEpIHsKICAgIHJldHVybiBmZXRjaC5xdWVzdGlvbiA9IGRhdGE7CiAgfSwKICBERVRBSUxfRkVUQ0hfUTogZnVuY3Rpb24gREVUQUlMX0ZFVENIX1EoZmV0Y2gsIGRhdGEpIHsKICAgIHJldHVybiBmZXRjaC5kYXRhID0gZGF0YTsKICB9LAogIFBPSU5UX1FVRVNUSU9OOiBmdW5jdGlvbiBQT0lOVF9RVUVTVElPTihwb2ludCwgZGF0YSkgewogICAgcmV0dXJuIHBvaW50LnBvaW50LnBvaW50ICs9IGRhdGE7CiAgfQp9Owp2YXIgZ2V0dGVycyA9IHsKICBxdWVzdGlvbjogZnVuY3Rpb24gcXVlc3Rpb24oZmV0Y2gpIHsKICAgIHJldHVybiBmZXRjaC5xdWVzdGlvbjsKICB9LAogIGRldGFpbDogZnVuY3Rpb24gZGV0YWlsKGZldGNoKSB7CiAgICByZXR1cm4gZmV0Y2guZGF0YTsKICB9LAogIGdldFBvaW50OiBmdW5jdGlvbiBnZXRQb2ludChwb2ludCkgewogICAgcmV0dXJuIHBvaW50LnBvaW50OwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZSwKICBhY3Rpb25zOiBhY3Rpb25zLAogIG11dGF0aW9uczogbXV0YXRpb25zLAogIGdldHRlcnM6IGdldHRlcnMKfTs="},{"version":3,"sources":["/Users/orangewater/test_work/frontend/src/store/questionModules/index.ts"],"names":[],"mappings":"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","sourcesContent":["import axios, { AxiosResponse } from 'axios'\n\ninterface Answer {\n    id: number\n    name: string;\n    create_at: string;\n}\n\ninterface AnswerText {\n    id: number\n    name: string;\n    create_at: string;\n}\n\ninterface Question {\n    id: number;\n    quest: string;\n    create_at: any;\n    answer: Answer[];\n    answer_text: AnswerText[];\n}\n\ninterface PointState {\n    point: number;\n}\n\ninterface QuestionState {\n    readonly question: Question[];\n    readonly data: Question\n    readonly point: PointState;\n}\n\nconst state: QuestionState = {\n    question: [],\n    data: {\n        id: 0,\n        quest: '',\n        create_at: '',\n        answer: [],\n        answer_text: [],\n    },\n    point: {\n        point: 0\n    }\n    \n}\n\ninterface AnswerState {\n    pk: number;\n    answer: string;\n}\n\ninterface UserState {\n    first_name: string;\n    last_name: string;\n}\n\nconst actions = {\n    async fetchQuestion({commit}: any) {\n        const response = await axios.get('http://localhost:8000/api/v1/question/').then((res: AxiosResponse) => {\n            commit('FETCH_Q', res.data)\n        })\n        return response\n    },\n    async detailQuestion({commit}: any, newValue: number) {\n        const response = await axios.get(`http://localhost:8000/api/v1/question/${newValue}/`)\n        return response\n    },\n    async answersQuestion({commit}: any, newValue: AnswerState) {\n        const response = await axios.put(`http://localhost:8000/api/v1/question/question/answer/${newValue.pk}/`, {\n            'answers': newValue.answer\n        }, {\n            headers: {\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n        })\n        return response\n    },\n    async register({commit}: any, newValue: UserState) {\n        const response = await axios.post(`http://localhost:8000/api/v1/user/`, newValue)\n        return response\n    },\n}\nconst mutations = {\n    FETCH_Q: (fetch: QuestionState | any, data: any) => fetch.question = data,\n    DETAIL_FETCH_Q: (fetch: QuestionState | any, data: any) => fetch.data = data,\n    POINT_QUESTION: (point: QuestionState, data: any) => point.point.point += data\n}\nconst getters = {\n    question: (fetch: QuestionState) => fetch.question,\n    detail: (fetch: QuestionState) => fetch.data,\n    getPoint: (point: QuestionState) => point.point\n}\n\nexport default {\n    state,\n    actions,\n    mutations,\n    getters\n}"],"sourceRoot":""}]}